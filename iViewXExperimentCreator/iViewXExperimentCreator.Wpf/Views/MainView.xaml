<views:MvxWpfView 
             xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
             xmlns:mvx="clr-namespace:MvvmCross.Platforms.Wpf.Binding;assembly=MvvmCross.Platforms.Wpf"
             x:Class="iViewXExperimentCreator.Wpf.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:con="clr-namespace:iViewXExperimentCreator.Wpf.Converters"
             xmlns:local="clr-namespace:iViewXExperimentCreator.Wpf.Views"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">

    <views:MvxWpfView.Resources>
        <con:ImageConverter x:Key="ImageConverter"/>
        <con:InverseBoolConverter x:Key="InverseBoolConverter"/>
        <con:BrushConverter x:Key="BrushConverter"/>
        <con:VisibilityConverter x:Key="VisibilityConverter"/>
        <con:IsNotNullConverter x:Key="IsNotNullConverter"/>
    </views:MvxWpfView.Resources>
    <views:MvxWpfView.Background>
        <SolidColorBrush Color="#17191a"/>
    </views:MvxWpfView.Background>
    
    <DockPanel>
        <!--Buttonleiste am oberen Rand-->
        <StackPanel DockPanel.Dock="Top"
                    Orientation="Horizontal"
                    Visibility="{Binding Windowed, Converter={StaticResource VisibilityConverter}}"
                    IsEnabled="{Binding ExperimentRunning, Converter={StaticResource InverseBoolConverter}}">
            <!--Button zum Öffnen eines neuen Experiments-->
            <Button Command="{Binding OpenNewExperimentWindowCommand}"
                    DockPanel.Dock="Top"
                    Margin="0,0,5,0">
                <!--Icongeometrie aus der offiziellen Visual Studio 2019 Icon Library (modifiziert)--> 
                <Viewbox Width="28" Height="28" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
                    <Rectangle Width="28" Height="28">
                        <Rectangle.Fill>
                            <DrawingBrush>
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                            <GeometryDrawing Brush="SkyBlue" Geometry="F1M1.9998,-0.000199999999999534L1.9998,2.0188 0.9998,2.0188 0.9998,5.9998 1.9998,5.9998 1.9998,15.9998 15.0008,15.9998 15.0008,4.3788 10.6208,-0.000199999999999534z" />
                                            <GeometryDrawing Brush="#FF424242" Geometry="F1M10,5L10,2.207 12.793,5z M10.207,1L7,1 7,2 9,2 9,2.018 9,6 13,6 13,14 4,14 4,8 3.019,8 3,15 14,15 14,4.793z" />
                                            <GeometryDrawing Brush="#FF424242" Geometry="F1M10,5L10,2.207 12.793,5z M10.207,1L7,1 7,2 9,2 9,2.018 9,6 13,6 13,14 4,14 4,8 3.019,8 3,15 14,15 14,4.793z" />
                                            <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M7,2.018L9,2.018 9,1.999 7,1.999z" />
                                            <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M10,2.207L10,5 12.793,5z" />
                                            <GeometryDrawing Brush="#FFF0EFF1" Geometry="F1M9,6L7,6 7,8 4,8 4,14 13,14 13,6z" />
                                            <GeometryDrawing Brush="#FFEFEFF0" Geometry="F1M7,2.018L9,2.018 9,1.999 7,1.999z" />
                                            <GeometryDrawing Brush="#FFEFEFF0" Geometry="F1M10,2.207L10,5 12.793,5z" />
                                            <GeometryDrawing Brush="#FFEFEFF0" Geometry="F1M9,6L7,6 7,8 4,8 4,14 13,14 13,6z" />
                                            <GeometryDrawing Brush="Black" Geometry="F1M8,3.0181L6,3.0181 6,1.0001 4.019,1.0001 4.019,3.0181 2,3.0181 2,5.0001 4.019,5.0001 4.019,7.0001 6,7.0001 6,5.0001 8,5.0001z" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Viewbox>
                <Button.ToolTip>
                    Neues Experiment erstellen.
                </Button.ToolTip>
            </Button>
            <!--Button zum Laden eines Experiments--> 
            <Button Command="{Binding OpenLoadExperimentWindowCommand}"
                    DockPanel.Dock="Top"
                    Margin="0,0,5,0">
                <!--Icongeometrie aus der offiziellen Visual Studio 2019 Icon Library (modifiziert)-->
                <Viewbox Width="28" Height="28" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
                    <Rectangle Width="28" Height="28">
                        <Rectangle.Fill>
                            <DrawingBrush>
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16.018L0,16.018 0,0.0180000000000007 16,0.0180000000000007z" />
                                            <GeometryDrawing Brush="SkyBlue" Geometry="F1M16,4.3965L16,16.0175 3,16.0175 3,9.9675C1.308,9.7215 0,8.2765 0,6.5175 0,4.7595 1.308,3.3135 3,3.0685L3,0.0175000000000001 5.711,0.0175000000000001 5.729,0.000499999999999723 5.746,0.0175000000000001 11.621,0.0175000000000001z" />
                                            <GeometryDrawing Brush="#FFEFEFF0" Geometry="F1M10,6.0176L10,4.7636 5.729,9.0356 5,8.3066 5,14.0176 14,14.0176 14,6.0176z M10,4.2716L10,2.0176 7.746,2.0176z M13.793,5.0176L11,5.0176 11,2.2246z" />
                                            <GeometryDrawing Brush="#FF424242" Geometry="F1M6.7464,1.0177L7.7464,2.0177 9.9994,2.0177 9.9994,6.0167 14.0004,6.0167 14.0004,14.0177 5.0004,14.0177 5.0004,10.0177 3.9994,10.0177 3.9994,15.0167 15.0004,15.0167 15.0004,4.8107 11.2064,1.0177z M10.9994,2.2247L13.7934,5.0177 10.9994,5.0177z" />
                                            <GeometryDrawing Brush="Black" Geometry="F1M8.832,4.5176L5.728,7.6216 5.021,6.9136 6.918,5.0176 3.5,5.0176C2.673,5.0176 2,5.6906 2,6.5176 2,7.3446 2.673,8.0176 3.5,8.0176L3.5,9.0176C2.122,9.0176 1,7.8966 1,6.5176 1,5.1396 2.122,4.0176 3.5,4.0176L6.918,4.0176 5.021,2.1216 5.728,1.4136z" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Viewbox>
                <Button.ToolTip>
                    Experiment laden.
                </Button.ToolTip>
            </Button>
            <!--Button zum Bearbeiten des aktiven Experiments-->
            <Button Command="{Binding OpenExperimentSettingsWindowCommand}"
                    DockPanel.Dock="Top"
                    Margin="0,0,5,0"
                    IsEnabled="{Binding ExperimentLoaded}">
                <!--Icongeometrie aus der offiziellen Visual Studio 2019 Icon Library (modifiziert)-->
                <Viewbox Width="28" Height="28" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
                    <Rectangle Width="28" Height="28">
                        <Rectangle.Fill>
                            <DrawingBrush>
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <DrawingGroup.Children>
                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                            <GeometryDrawing Brush="SkyBlue" Geometry="F1M5.9859,-0.000199999999999534L5.6129,2.2378 3.7669,0.918800000000001 0.9189,3.7668 2.2369,5.6128 -9.99999999997669E-05,5.9858 -9.99999999997669E-05,10.0118 2.2369,10.3868 0.9189,12.2338 3.7669,15.0798 5.6119,13.7628 5.9859,15.9998 10.0129,15.9998 10.3869,13.7618 12.2339,15.0798 15.0799,12.2338 13.7619,10.3868 15.9999,10.0148 15.9999,5.9868 13.7619,5.6128 15.0799,3.7668 12.2339,0.919800000000001 10.3869,2.2378 10.0139,-0.000199999999999534z" />
                                            <GeometryDrawing Brush="#FF424242" Geometry="F1M10.2123,8C10.2123,9.222 9.2223,10.212 8.0003,10.212 6.7783,10.212 5.7873,9.222 5.7873,8 5.7873,6.778 6.7783,5.788 8.0003,5.788 9.2223,5.788 10.2123,6.778 10.2123,8z M9.9643,3.257C9.8183,3.197,9.6683,3.17,9.5203,3.124L9.1663,1 6.8333,1 6.4803,3.121C6.1853,3.213,5.8993,3.332,5.6253,3.475L3.8753,2.225 2.2253,3.875 3.4773,5.627C3.4053,5.764 3.3183,5.89 3.2573,6.036 3.1973,6.182 3.1703,6.331 3.1243,6.479L1.0003,6.833 1.0003,9.166 3.1213,9.52C3.2133,9.815,3.3313,10.101,3.4753,10.375L2.2253,12.125 3.8753,13.775 5.6273,12.523C5.7643,12.595 5.8893,12.682 6.0353,12.742 6.1813,12.803 6.3313,12.83 6.4793,12.876L6.8333,15 9.1663,15 9.5203,12.879C9.8153,12.787,10.1013,12.668,10.3743,12.525L12.1243,13.775 13.7743,12.125 12.5233,10.373C12.5953,10.236 12.6823,10.11 12.7423,9.964 12.8033,9.818 12.8303,9.669 12.8763,9.521L15.0003,9.167 15.0003,6.834 12.8783,6.48C12.7863,6.185,12.6683,5.899,12.5243,5.625L13.7743,3.875 12.1253,2.225 10.3723,3.477C10.2353,3.405,10.1103,3.318,9.9643,3.257z" />
                                        </DrawingGroup.Children>
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Viewbox>
                <Button.ToolTip>
                    Experiment bearbeiten.
                </Button.ToolTip>
            </Button>
        </StackPanel>
        <Grid KeyboardNavigation.ControlTabNavigation="None" 
          Focusable="True"
          Margin="10"
              DockPanel.Dock="Bottom">
            <!--Hier wird deklariert, auf welche Tasteneingaben der View reagieren soll-->
            <Grid.InputBindings>
                <KeyBinding Key="Left" Command="{Binding LeftKeyPressedCommand}"/>
                <KeyBinding Key="Right" Command="{Binding RightKeyPressedCommand}"/>
                <KeyBinding Key="Esc" Command="{Binding EscapeKeyPressedCommand}"/>
                <KeyBinding Key="Up" Command="{Binding UpKeyPressedCommand}"/>
                <KeyBinding Key="Down" Command="{Binding DownKeyPressedCommand}"/>
            </Grid.InputBindings>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="150"/>
                <ColumnDefinition Width="150"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="120"/>
            </Grid.RowDefinitions>


            <!--Dieser Grid ist nur bei einem laufenden Vollbild-Experiment oder einer Vollbild-Kalibrierung aktiv-->
            <!--Hier werden Präsentationselemente im Vollbildmodus angezeigt.-->
            <Grid 
              Grid.Column="0"
              Grid.Row="0"
              Grid.RowSpan="10"
              Grid.ColumnSpan="10"
              Visibility="{Binding Fullscreen, Converter={StaticResource VisibilityConverter}}"
              IsVisibleChanged="FullscreenExperimentView_IsVisibleChanged">
                <Image Stretch="Uniform"
                   Source="{Binding PreviewImage, Mode=OneWay, Converter={StaticResource ImageConverter}}"
                       Visibility="{Binding ImagePreviewVisibility, Converter={StaticResource VisibilityConverter}}"/>

                <MediaElement Source="{Binding PreviewVideo.Stimulus.FilePath}"
                              Volume="{Binding PreviewVideo.Volume}"
                          LoadedBehavior="Play"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Stretch="Uniform"
                          IsMuted="{Binding RunMaximized, Converter={StaticResource InverseBoolConverter}}"
                          x:Name="FullscreenWindowMedia"
                          Visibility="{Binding VideoPreviewVisibility, Converter={StaticResource VisibilityConverter}}"
                          MediaOpened="FullscreenWindowMedia_MediaOpened"/>
            </Grid>

            <Border Grid.Column="1" 
                Grid.Row="0"
                BorderBrush="{Binding PreviewBorderColor, Converter={StaticResource BrushConverter}}"
                BorderThickness="2px"
                Visibility="{Binding Windowed, Converter={StaticResource VisibilityConverter}}" >
                <!--Hier werden Präsentationselemente und Vorschau im Fenstermodus angezeigt-->
                <Grid>
                    <Image Stretch="Uniform"
                           x:Name="PreviewImage"
                           Source="{Binding PreviewImage, Mode=OneWay, Converter={StaticResource ImageConverter}}"
                           AllowDrop="True"
                           Drop="PreviewImage_Drop"
                           Visibility="{Binding ImagePreviewVisibility, Converter={StaticResource VisibilityConverter}}"/>
                    <MediaElement Source="{Binding PreviewVideo.Stimulus.FilePath}"
                                  Volume="{Binding PreviewVideo.Volume}"
                                  LoadedBehavior="Play"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Stretch="Uniform"
                                  IsMuted="{Binding RunMaximized}"
                                  x:Name="PreviewWindowMedia"
                                  Visibility="{Binding VideoPreviewVisibility, Converter={StaticResource VisibilityConverter}}"
                                  MediaOpened="PreviewWindowMedia_MediaOpened"
                                  />
                </Grid>
            </Border>

            <!--Die Log am unteren Bildschirmrand-->
            <ScrollViewer Grid.Row="1"
                          Grid.Column="1"
                          Margin="8,8,8,0"
                          x:Name="logScrollViewer"
                          Visibility="{Binding Windowed, Converter={StaticResource VisibilityConverter}}"
                          IsEnabled="{Binding ExperimentRunning, Converter={StaticResource InverseBoolConverter}}">
                <TextBox IsReadOnly="True"
                         Text="{Binding LogText, Mode=OneWay}"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         TextChanged="Log_TextChanged"
                         TextWrapping="Wrap"/>
            </ScrollViewer>



            <UniformGrid Grid.Column="2"
                         Grid.ColumnSpan="2"
                         Grid.Row="0"
                         Columns="1"
                         Visibility="{Binding Windowed, Converter={StaticResource VisibilityConverter}}" >
                <DockPanel Height="auto"
                           IsEnabled="{Binding ExperimentRunning, Converter={StaticResource InverseBoolConverter}}">
                    <TextBlock Text="Komponenten"
                           DockPanel.Dock="Top"
                           Margin="3"/>
                    <!--Reihe der Buttons zum Hinzufügen von Komponenten und Reizen-->
                    <StackPanel Orientation="Horizontal"
                                DockPanel.Dock="Top"
                                Height="26">
                        <!--Button um neue Sequenz zu erstellen-->
                        <Button Content="Neue Sequenz"
                                Command="{Binding NewSequenceCommand}"
                                Margin="2"
                        IsEnabled="{Binding ExperimentLoaded}">
                            <Button.ToolTip>
                                Erstellt eine neue Sequenzkomponente. Sequenzen bestehen aus Slots und generieren aus diesen sogenannte Snapshots, welche in einer Präsentation abgespielt werden.
                            </Button.ToolTip>
                        </Button>
                        <!--Button um neues Video zu erstellen-->
                        <Button Content="Neues Video"
                                Command="{Binding NewVideoCommand}"
                                Margin="2"
                                IsEnabled="{Binding ExperimentLoaded}">
                            <Button.ToolTip>
                                Erstellt eine neue Videokomponente. Videokomponenten enthalten einen Videoreiz, aus welchem Videosnippets extrahiert werden.
                            </Button.ToolTip>
                        </Button>
                        <!--Button um Reize zu importieren-->
                        <Button Content="Reiz(e) importieren" 
                                Margin="2" 
                                DockPanel.Dock="Top"
                                Click="Button_OpenStimulusImportFileDialog"
                                IsEnabled="{Binding ExperimentLoaded}">
                            <Button.ToolTip>
                                Öffnet den Windows-File-Dialog, um Bild- und Videoreize ins Experiment zu importieren. Diese können in Sequenzen und Videos verwendet werden.
                            </Button.ToolTip>
                        </Button>

                    </StackPanel>
                    <!-- Liste der Experimentkomponenten (dh Sequenzen und Videos) -->
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                          VerticalScrollBarVisibility="Visible"
                          DockPanel.Dock="Top"
                          Height="auto">
                        <DataGrid ItemsSource="{Binding Path=ExperimentComponents}"
                          SelectedItem="{Binding Path=SelectedExperimentComponent}"
                          CanUserAddRows="True"
                          AutoGenerateColumns="False"
                          x:Name="dataGrid"
                          HeadersVisibility="Column">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Name"
                                                    Width="*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Name}">
                                                <TextBlock.InputBindings>
                                                    <!--Soll bei Doppelklick auf Komponente den Editor öffnen-->
                                                    <MouseBinding MouseAction="LeftDoubleClick"
                                                          Command="{Binding DataContext.EditSequenceCommand, 
                                                                    RelativeSource={RelativeSource FindAncestor,
                                                                                    AncestorType={x:Type UserControl}}}"/>
                                                </TextBlock.InputBindings>
                                                <!--Kontextmenü für Komponenten. Hier kann man bearbeiten, duplizieren und löschen-->
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                                        <MenuItem Header="Bearbeiten"
                                                              Command="{Binding DataContext.EditSequenceCommand, Source={x:Reference dataGrid}}"/>
                                                        <MenuItem Header="Duplizieren"
                                                              Command="{Binding DataContext.DuplicateComponentCommand, Source={x:Reference dataGrid}}"/>
                                                        <MenuItem Header="Löschen"
                                                                  Click="DeleteSequence_Click"/>
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                                <TextBlock.ToolTip>
                                                    Die Komponente kann durch einen Doppelklick bearbeitet werden. Weitere Optionen stehen im Kontextmenü bereit.
                                                </TextBlock.ToolTip>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <!--Checkboxcolumn damit man Komponenten aktivieren und deaktivieren kann-->
                                <DataGridCheckBoxColumn Header=""
                                                Binding="{Binding Active, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridCheckBoxColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip" Value="Aktiviert oder deaktiviert die Komponente. Deaktivierte Komponenten werden in einer Präsentation nicht abgespielt."/>
                                            <Setter Property="Background" Value="#28353b"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Style>
                                    </DataGridCheckBoxColumn.CellStyle>
                                </DataGridCheckBoxColumn>
                                <!--Dauer soll auch in dieser Liste angezeigt werden. Könnte nützlich sein und es ist Platz-->
                                <DataGridTextColumn Header="Dauer"
                                            Binding="{Binding Duration, Mode=OneWay}"/>
                                <DataGridTemplateColumn Width="40">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Button Content="&#xE1FD;"
                                                FontFamily="Segoe UI Symbol"
                                                Command="{Binding DataContext.DecrementSequencePositionCommand, 
                                                                    RelativeSource={RelativeSource FindAncestor,
                                                                                    AncestorType={x:Type UserControl}}}">
                                                    <Button.ToolTip>
                                                        Die Komponente wird später abgespielt.
                                                    </Button.ToolTip>
                                                </Button>
                                                <Button Content="&#xE110;"
                                                FontFamily="Segoe UI Symbol"
                                                Command="{Binding DataContext.IncrementSequencePositionCommand, 
                                                                    RelativeSource={RelativeSource FindAncestor,
                                                                                    AncestorType={x:Type UserControl}}}">
                                                    <Button.ToolTip>
                                                        Die Komponente wird früher abgespielt.
                                                    </Button.ToolTip>
                                                </Button>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </ScrollViewer>
                </DockPanel>

                <DockPanel IsEnabled="{Binding ExperimentRunning, Converter={StaticResource InverseBoolConverter}}">
                    <TextBlock Text="Präsentationselemente"
                           DockPanel.Dock="Top"
                           Margin="3"/>
                    <!--Liste der Präsentationselemente, also Videosnippets und Snapshots-->
                    <ScrollViewer DockPanel.Dock="Bottom">
                        <DataGrid ItemsSource="{Binding PresentationElements}"
                                  SelectionMode="Single"
                                  SelectedItem="{Binding SelectedPresentable}"
                                  HeadersVisibility="Column"
                                  AutoGenerateColumns="False">

                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Name"
                                                    Width="*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Name}">
                                                <TextBlock.ToolTip>
                                                    Der Name des Präsentationselements.
                                                </TextBlock.ToolTip>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridCheckBoxColumn Header="Pausiert"
                                                Binding="{Binding Path=Pauses, Mode=OneWay}">
                                    <DataGridCheckBoxColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip" Value="Gibt an, ob dieser Snapshot die Präsentation pausiert, um auf eine Eingabe der Versuchsperson zu warten."/>
                                            <Setter Property="Background" Value="#28353b"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Style>
                                    </DataGridCheckBoxColumn.CellStyle>
                                </DataGridCheckBoxColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </ScrollViewer>
                </DockPanel>
            </UniformGrid>

            <!--Block rechts unten zur Verbindung mit dem SMI Experiment Center und Starten von Exp. und Kal.-->
            <Grid Grid.Column="2"
              Grid.Row="1"
              Grid.ColumnSpan="2"
              Margin="8, 8, 0, 0"
              Visibility="{Binding Windowed, Converter={StaticResource VisibilityConverter}}" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="22*"/>
                    <ColumnDefinition Width="29*"/>
                    <ColumnDefinition Width="95*"/>
                    <ColumnDefinition Width="146*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock Text="IP-Adresse:"
                       Grid.Column="0"
                       Grid.Row="0" Grid.ColumnSpan="3" Margin="0,0,0,18" Grid.RowSpan="2">
                    <TextBlock.ToolTip>
                        Die IP-Adresse, welche zur Verbindung mit dem SMI Experiment Center verwendet wird.
                    </TextBlock.ToolTip>
                </TextBlock>
                <TextBox Text="{Binding IP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="1"
                     Grid.Column="0"
                     IsEnabled="{Binding ExperimentRunning, Converter={StaticResource InverseBoolConverter}}" Grid.ColumnSpan="3">
                    <TextBox.ToolTip>
                        Die IP-Adresse, welche zur Verbindung mit dem SMI Experiment Center verwendet wird.
                    </TextBox.ToolTip>
                </TextBox>

                <TextBlock Text="Port:"
                       Grid.Column="0"
                       Grid.Row="1" Grid.ColumnSpan="3" Margin="0,18,0,0" Grid.RowSpan="2">
                    <TextBlock.ToolTip>
                        Der Port, welcher zur Verbindung mit dem SMI Experiment Center verwendet wird.
                    </TextBlock.ToolTip>
                </TextBlock>
                <TextBox Text="{Binding Port, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="3"
                     Grid.Column="0"
                     IsEnabled="{Binding ExperimentRunning, Converter={StaticResource InverseBoolConverter}}" Grid.ColumnSpan="3" Margin="0,0,0,18" Grid.RowSpan="2">
                    <TextBox.ToolTip>
                        Der Port, welcher zur Verbindung mit dem SMI Experiment Center verwendet wird.
                    </TextBox.ToolTip>
                </TextBox>

                <TextBlock Text="Subjektname:"
                       Grid.Column="0"
                       Grid.Row="4" Grid.ColumnSpan="3">
                    <TextBlock.ToolTip>
                        Der Name der Versuchsperson.
                    </TextBlock.ToolTip>
                </TextBlock>
                <TextBox Text="{Binding SubjectName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="4"
                     Grid.Column="0"
                     IsEnabled="{Binding ExperimentRunning, Converter={StaticResource InverseBoolConverter}}" Grid.ColumnSpan="3" Margin="0,18,0,0" Grid.RowSpan="2">
                    <TextBox.ToolTip>
                        Der Name der Versuchsperson.
                    </TextBox.ToolTip>
                </TextBox>

                <!--Kontrolle darüber ob Snapshots und Videosnippets auf Festplatte gespeichert werden, wenn Exp durchgeführt-->
                <DockPanel Grid.Row="0"
                       Grid.Column="3" Margin="0,0,0,18" Grid.RowSpan="2">
                    <TextBlock Text="Testdurchlauf:"
                           DockPanel.Dock="Left"
                           Margin="8,0,0,0">
                        <TextBlock.ToolTip>
                            Wenn diese Option aktiviert ist, dann werden generierte Snapshots und Videosnippets nicht auf der Festplatte gespeichert.
                        </TextBlock.ToolTip>
                    </TextBlock>
                    <CheckBox IsChecked="{Binding SaveSnapshotsToDrive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBoolConverter}}"
                          IsEnabled="{Binding ExperimentRunning, Converter={StaticResource InverseBoolConverter}}"
                          DockPanel.Dock="Right"
                          HorizontalAlignment="Right">
                        <CheckBox.ToolTip>
                            Wenn diese Option aktiviert ist, dann werden generierte Snapshots und Videosnippets nicht auf der Festplatte gespeichert.
                        </CheckBox.ToolTip>
                    </CheckBox>
                </DockPanel>

                <!--Kontrolle über Vollbild/Fenstermodus der Durchführung von Exp. und Kal.-->
                <DockPanel Grid.Row="1"
                       Grid.Column="3">
                    <TextBlock Text="Vollbild:"
                           DockPanel.Dock="Left"
                           Margin="8,0,0,0">
                        <TextBlock.ToolTip>
                            Wenn diese Option aktiviert ist, dann werden Kalibrierung und Präsentation im Vollbildmodus abgespielt.
                        </TextBlock.ToolTip>
                    </TextBlock>
                    <CheckBox IsChecked="{Binding RunMaximized, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          IsEnabled="{Binding ExperimentRunning, Converter={StaticResource InverseBoolConverter}}"
                          DockPanel.Dock="Right"
                          HorizontalAlignment="Right">
                        <CheckBox.ToolTip>
                            Wenn diese Option aktiviert ist, dann werden Kalibrierung und Präsentation im Vollbildmodus abgespielt.
                        </CheckBox.ToolTip>
                    </CheckBox>
                </DockPanel>

                <!--Durch diesen Button wird die Kalibrierung gestartet-->
                <Button Grid.Column="3"
                    Grid.Row="2"
                    Grid.RowSpan="3"
                    Margin="8,8,0,18"
                    Content="Kalibrieren"
                    Command="{Binding StartCalibrationCommand}"
                    IsEnabled="{Binding CanStartCalibration}">
                    <Button.ToolTip>
                        Startet die Kalibrierung.
                    </Button.ToolTip>
                </Button>

                <!--Durch diesen Button wird das Experiment gestartet--> 
                <Button Grid.Column="3"
                    Grid.Row="4"
                    Grid.RowSpan="2"
                    Margin="8, 8, 0, 0"
                    Content="Start"
                    Command="{Binding RunExperimentCommand}"
                    IsEnabled="{Binding CanStartExperiment}">
                    <Button.ToolTip>
                        Startet die Präsentation.
                    </Button.ToolTip>
                </Button>
            </Grid>

        </Grid>
    </DockPanel>
</views:MvxWpfView>
